---
title: "collaborative_notebook"
date: "2-21-2024"
shorttitle: "Keya and Gabriella"
author:
  - name: Keya Chinnam and Gabriella Bann
    #corresponding: true
    affiliations:
      - name: University of Chicago
        #department: Department of the Social Sciences -- Psychology
abstract: "Abstraction"
keywords: [keya, gabriella, science]
bibliography: ["ibogaine for opiopid withdrawals.bib"]
author-note:
  disclosures:
    conflict of interest: The author has all conflicts of interest to declare.
  gratitude: "shout out to the real ones"
#documentmode: jou
format:
  pdf:
    number-sections: true
---

# Heading 1

## Heading 2

### Heading 3

*hello*

-   List item

    -   List item 2

        -   Listen item 3

**Best K-pop Groups:**

1.  BTS (3^rd^ generation)
2.  Stray Kids (4^th^ generation)
    1.  3RACHA \[\^note1\]
    2.  [@malcolmChangesWithdrawalCraving2018]

click here for the \[best choreography\] (<https://www.youtube.com/watch?v=FKJk2Lr7Sck>)

<!-- hello what's up-->

\[\^note1\]: Stray Kids subunit

```{r}
#| label: performing set-up tasks
#|echo: false

#loading packages and libraries
#quarto::quarto_use_template("wjschne/apaquarto", no_prompt = T)
#install.packages("apaquarto")
#library(apaquarto)
#quarto not running properly, commenting out for now
library(tidyverse)
library(dplyr)
library(ggplot2)


#setting seed
set.seed(123)

#loading in data
data <- read_csv("data.csv")

#sourcing R script
#if (file.exists("data_preprocessing.R")) {
  source("data_preprocessing.R")
#} else {
#  print("'data_preprocessing.R' not found. please make sure it exists in your working directory.")}


#setting default chunk options
# knitr::opts_chunk$set(
#   echo = TRUE,
#   warning = FALSE,
#   message = FALSE,
#   fig.align = "center",
#   fig.width = 6,
#   fig.height = 4)

```

```{r}
#| label: executing non-setup R code
#| echo: true
#assigned values to objects
x <- 10
y <- 20
z <- x + y

#constucted a data frame
df <- tibble(
  Name = c("Andres", "Blanca", "Carlos", "Dino", "Edgar"),
  Age = c(23, 19, 45, 33, 27),
  Score = c(90, 85, 99, 86, 94),
  Group = c("B", "A", "B", "A", "B"))

#defined functions
calculate_mean <- function(numbers) {
  mean(numbers)}

mean_score <- calculate_mean(df$Score)

```

# Results

```{r}
#| label: descriptive analysis/hypothesis testing
#| echo: true

summary(df)

#if needed, filtered data frame
#df_filtered

#table of score staus if needed
#table(df$Status)

#summary statistics for numeric variables
summary_statistics <- df %>%
  summarise(
    Mean_Age = mean(Age),
    SD_Age = sd(Age),
    mean_score = mean(Score),
    SD_Score = sd(Score))

# numeric_summary %>%
#   kable("html", caption = "Summary Statistics for Numeric Variables") %>%
#   kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)

#summary statistics for character variables #ERROR HERE
group_summary_statistics <- df %>%
  c(Group) %>%
  mutate(Proportion = n/sum(n))
```



```{r}
#| label: catenating
c("\nSummary Statistics for Non-Numeric Variables:\n")
print(non_numeric_summary)

#printing the average and mean age
c("The average age of participants in this data set is", average_age, " .\n")

c(
  "The mean age of participants in this data set is", round(mean(df$Age), 2), 
  "years (SD =", round(sd(df$Age), 2), ").\n",
  "The mean percent score participants recieved on the exam is", round(mean(df$Score), 2), 
  "points (SD =", round(sd(df$Score), 2), ").\n")

#printing the frequency in each course session
c(
  "The frequency of participants in Group A of the course session is", non_numeric_summary$n[non_numeric_summary$Group == "A"], 
  "(", round(non_numeric_summary$Proportion[non_numeric_summary$Group == "A"] * 100, 2), "% of the sample).\n",
  "The frequency of participants in Group B of the course session is", non_numeric_summary$n[non_numeric_summary$Group == "B"], 
  "(", round(non_numeric_summary$Proportion[non_numeric_summary$Group == "B"] * 100, 2), "% of the sample).\n"
)
```

```{r}
#| label: publication quality table
#| echo: false
#| fig-cap: "Table 1"
#table 
df %>%
  kable("html", caption = "Data Frame of Test Scores") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
```

```{r}
#| label: publication quality figure 1
#| echo: false
#| fig-cap: "Figure 1"
#figure
ggplot(df, aes(x = Age, y = Score)) +
  geom_point(
    aes(color = Group),  
    size = 4,  
    alpha = 0.8 
  ) +
  geom_smooth(
    method = "lm",  
    se = FALSE,  
    color = "black",  
    linetype = "dashed"  
  ) +
  labs(
    title = "Relationship Between Participant Age and their Score",  
    subtitle = "Data from Made-up Participants",  
    x = "Age (in years)",  
    y = "Score (%)", 
    color = "Course Section"
  ) +
  theme_minimal() +  
  theme(
    text = element_text(family = "Times New Roman", size = 12),  
    plot.title = element_text(
      size = 14, face = "bold", hjust = 0.5  
    ),
    plot.subtitle = element_text(
      size = 12, hjust = 0.5 
    ),
    axis.title.x = element_text(
      size = 12, face = "bold" 
    ),
    axis.title.y = element_text(
      size = 12, face = "bold" 
    ),
    axis.text.x = element_text(
      size = 10, angle = 45, hjust = 1  
    ),
    axis.text.y = element_text(
      size = 10 
    ),
    legend.title = element_text(
      size = 12, face = "bold" 
    ),
    legend.text = element_text(
      size = 10  
    ),
    panel.grid.major = element_line(color = "gray80"),  
    panel.grid.minor = element_blank() 
  )
```

```{r}
#| label: publication quality figure 2
#| echo: false
#| fig-cap: "Figure 2"
#figure
ggplot(df, aes(x = Name, y = Score)) +
  geom_bar(stat = "identity", fill = "steelblue", width = 0.7) +
  geom_text(aes(label = Score), vjust = -0.5, size = 4, color = "black") +
  labs(title = "Scores by Participant Name", x = "Name of Participant", y = "Score (%)") +
  theme_minimal() +
  theme(
    text = element_text(family = "Times New Roman", size = 12),
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 12, face = "bold", margin = margin(t = 10)),
    axis.title.y = element_text(size = 12, face = "bold", margin = margin(r = 10)),
    axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    panel.grid.major = element_line(color = "gray80"),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.line = element_line(color = "black")
  )
```

```{r}
#| label: publication quality figure 3
#| echo: false
#| fig-cap: "Figure 3"
#figure
ggplot(df, aes(x = Name, y = Score)) +
  geom_bar(stat = "identity", fill = "pink", width = 0.7) +
  geom_text(aes(label = Score), vjust = -0.5, size = 4, color = "black") +  # Add data labels
  labs(title = "Scores by Participant Name", x = "Participant Name", y = "Score (%)") +
  theme_minimal() +
  theme(
    text = element_text(family = "Times New Roman", size = 12),
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 12, face = "bold", margin = margin(t = 10)),
    axis.title.y = element_text(size = 12, face = "bold", margin = margin(r = 10)),
    axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    panel.grid.major = element_line(color = "gray80"),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.line = element_line(color = "black")
  )
```

```{r}
#| label: publication quality image
#| echo: false
#| fig-cap: "Image 1"
#image
if (file.exists("bts_whitehouse.png")) {
  knitr::include_graphics("bts_whitehouse.png")
} else {
  print("Image file not found.")} #"bts_whitehouse.png" in working directory
```

The mean test score is `r round(mean_score, 2)` .

The highest test score in the data set of given participants is `r max(df$Score)` .

The range of participant ages in the data set is from `r min(df$Age)` to `r max(df$Age)` years old. The median age in the data set is `r median(df$Age)` years old. The youngest person in the data set who took the exam is `r df$Name[which.min(df$Age)]`, who is currently `r min(df$Age)` years old.

The data set contains `r nrow(df)` observations, meaning that `r nrow(df)` individuals took the exam; with the scores ranging from `rmin(df$Score)` to `rmax(df$Score)`. The difference between the highest achieved score and the lowest is `r max(df$Score) - min(df$Score)` percent. In regards to the course sections enrolled, there were `r sum(df$Group == "A")` in session A and `r sum(df$Group == "B")` in session B. In comparing the two groups, there was an average acore of `r round(mean(df$Score[df$Group == "A"]), 2)` in session A while session B had an average score of `r round(mean(df$Score[df$Group == "B"]), 2)` percent.

**Figure 1** shows that there is a relationship between the participant's age and their test score. Further, the scores themselves are displayed by their respective participant name in **Figure 2**. More information on this data set is given in **Table 1**.

# References

::: {#refs}
:::
